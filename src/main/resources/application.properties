# ============================
# Configurazione Database (Oracle su Docker)
# ============================

# Connessione al database Oracle su Docker
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/XEPDB1
spring.datasource.username=system
spring.datasource.password=Oracle123!
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# ============================
# Configurazione Hibernate
# ============================

# Dialect di Hibernate per Oracle
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
# Mantieni lo schema del database senza modificarlo
spring.jpa.hibernate.ddl-auto=none
# Mostra le query SQL nella console
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# ============================
# Configurazione Flyway
# ============================

# Abilita Flyway
spring.flyway.enabled=true
# Percorso per le migrazioni
spring.flyway.locations=classpath:db/migration/oracle
# Migrazione iniziale
spring.flyway.baseline-on-migrate=true
# Configurazione di Flyway per il database
spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}

# ============================
# Configurazione Logging
# ============================

# Debug per connessione HikariCP e JDBC
logging.level.com.zaxxer.hikari=DEBUG
logging.level.oracle.jdbc=DEBUG

# ============================
# Configurazione Altri Servizi (esempi attivi)
# ============================

# MongoDB
spring.data.mongodb.uri=mongodb://admin:password123@localhost:27017/mongodb
spring.data.mongodb.database=mongodb

# Neo4j
spring.neo4j.uri=bolt://localhost:7687
spring.neo4j.authentication.username=neo4j
spring.neo4j.authentication.password=mynewstrongpassword

# Cassandra
spring.cassandra.contact-points=localhost
spring.cassandra.port=9042
spring.cassandra.keyspace-name=your_keyspace
spring.cassandra.local-datacenter=datacenter1
spring.cassandra.username=cassandra
spring.cassandra.password=cassandra

# Redis
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=mysecurepassword
spring.data.redis.ssl.enabled=false

# Kafka
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.producer.bootstrap-servers=localhost:9092

# ============================
# Sicurezza (JWT)
# ============================

jwt.secret=tuaChiaveSegretaLungaESicura123!@#
jwt.expiration=86400000

# ============================
# Monitoraggio e Tracing
# ============================

# Prometheus
management.endpoints.web.exposure.include=prometheus
management.metrics.tags.application=spring-boot-app

# Jaeger (OpenTelemetry)
otel.exporter.jaeger.endpoint=http://localhost:14250
otel.tracer.exporter=jaeger
otel.metrics.exporter=none

# ============================
# Stripe (Pagamenti)
# ============================

stripe.secret.key=sk_test_51QPh2t2NV71j0lvsQqX4zfci64NGW3SHYSUd48Tzmy83SFcQKBEGIeuFYbX4sDsEcWe8sAO46BndY0hFiBLPPGOB00JrqmQxUk
stripe.publishable.key=pk_test_yourPublishableKeyHere


#OAuth2
# Spring Security OAuth2
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

spring.security.oauth2.client.registration.github.client-id=YOUR_GITHUB_CLIENT_ID
spring.security.oauth2.client.registration.github.client-secret=YOUR_GITHUB_CLIENT_SECRET
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/github

spring.security.oauth2.client.registration.meta.client-id=YOUR_META_CLIENT_ID
spring.security.oauth2.client.registration.meta.client-secret=YOUR_META_CLIENT_SECRET
spring.security.oauth2.client.registration.meta.scope=email,public_profile
spring.security.oauth2.client.registration.meta.redirect-uri={baseUrl}/login/oauth2/code/meta

# OAuth2 Provider URLs
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id

spring.security.oauth2.client.provider.meta.authorization-uri=https://www.facebook.com/v10.0/dialog/oauth
spring.security.oauth2.client.provider.meta.token-uri=https://graph.facebook.com/v10.0/oauth/access_token
spring.security.oauth2.client.provider.meta.user-info-uri=https://graph.facebook.com/me?fields=id,name,email
spring.security.oauth2.client.provider.meta.user-name-attribute=id

# Base URL for Redirects
server.servlet.context-path=/
