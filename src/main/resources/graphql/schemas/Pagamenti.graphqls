type Pagamenti {
    paymentsID: String
    type: String
    data: String
    status: Boolean
    total: Float
}

input PagamentiInput {
    paymentsID: String
    type: String
    data: String
    status: Boolean
    total: Float
}

# Tipo di input per ParamQuery (configurazione della query)
input ParamQueryInputPagamenti {
    distinct: Boolean
    all: Boolean
    condizioneWhere: String
    valoriWhere: String
    boleani: String
    orderBy: Boolean
    top: Int
    aggregationType: AggregationTypePagamenti
    like: String
    in: [String]
    between: [String]
    having: String
    limit: Int
    offset: Int
}

# Enum per rappresentare i vari tipi di aggregazione
enum AggregationTypePagamenti {
    NONE
    MIN
    MAX
    COUNT
    AVG
    SUM
}

# Query per ottenere una lista di pagamenti con parametri dinamici
type QueryPagamenti {
    pagamenti(paramQuery: ParamQueryInputPagamenti, pagamenti: PagamentiInput): Pagamenti
}
